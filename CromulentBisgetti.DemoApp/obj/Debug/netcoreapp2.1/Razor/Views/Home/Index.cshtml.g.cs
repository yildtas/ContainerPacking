#pragma checksum "C:\FreeLance\ContainerPacking\CromulentBisgetti.DemoApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1c0c7d1b15193ecc5cb315a57732b4dd7e7bc12f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1c0c7d1b15193ecc5cb315a57732b4dd7e7bc12f", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("margin-bottom: 100px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\FreeLance\ContainerPacking\CromulentBisgetti.DemoApp\Views\Home\Index.cshtml"
   
    Layout = null;

#line default
#line hidden
            BeginContext(25, 8, true);
            WriteLiteral("\n<html>\n");
            EndContext();
            BeginContext(33, 1130, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c0c7d1b15193ecc5cb315a57732b4dd7e7bc12f3453", async() => {
                BeginContext(39, 1117, true);
                WriteLiteral(@"
    <title>Container Packing</title>
    <link rel=""stylesheet"" type=""text/css"" href=""css/vendor/bootstrap.min.css"">
    <style>
        body {
            margin: 0;
        }

        canvas {
            width: 100%;
            height: 100%;
        }

        table {
            font-size: 14px;
        }

            table.borderless td, table.borderless th {
                border: none !important;
            }

        .button-column {
            width: 60px;
        }

        .text-column {
            width: 160px;
        }

        .data-column {
            width: 80px;
        }

        .algorithm-name-column {
            width: 180px;
        }

        .gray-cell {
            background-color: #ececec;
        }
    </style>

    <script src=""js/vendor/jquery.js""></script>
    <script src=""js/vendor/bootstrap.min.js""></script>
    <script src=""js/vendor/ko.js""></script>
    <script src=""js/vendor/ko-mapping.js""></script>
    <script src=""js/vendor/three-min.js""></script>
    <script src");
                WriteLiteral("=\"js/vendor/orbit-controls.js\"></script>\n    <script src=\"js/container-packing.js\"></script>\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1163, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(1164, 15014, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c0c7d1b15193ecc5cb315a57732b4dd7e7bc12f5809", async() => {
                BeginContext(1200, 14971, true);
                WriteLiteral(@"
    <div id=""content"" class=""container"">
        <h3>3D Container Packing</h3>
        <div class=""row"">
            <div class=""col-xs-12"">
                <div class=""panel panel-default"">
                    <div class=""panel-heading"">
                        <h3 class=""panel-title pull-left"">Containers</h3>
                        <div class=""pull-right"">
                            <button class=""btn btn-default btn-sm"" data-bind=""click: GenerateContainers"">Generate</button>
                            <button class=""btn btn-primary btn-sm"" data-bind=""click: PackContainers"">Pack Em Up</button>
                        </div>
                        <div class=""clearfix""></div>
                    </div>
                    <div class=""panel-body"">
                        <table class=""table table-condensed"" style=""font-size: 14px;"">
                            <thead>
                                <tr>
                                    <th class=""button-column""></th>
                                 ");
                WriteLiteral(@"   <th class=""text-column"">Name</th>
                                    <th class=""data-column text-center"">L</th>
                                    <th class=""data-column text-center"">W</th>
                                    <th class=""data-column text-center"">H</th>
                                    <th class=""button-column gray-cell""></th>
                                    <th class=""algorithm-name-column"">Algorithm<br />Name</th>
                                    <th class=""data-column text-center"">Pack Time<br />(ms)</th>
                                    <th class=""data-column text-center""><div data-toggle=""tooltip"" title=""% of container volume packed with items"">% Cont.<br />Used</div></th>
                                    <th class=""data-column text-center""># Items<br />Packed</th>
                                    <th class=""data-column text-center""># Items<br />Unpacked</th>
                                    <th></th>
                                </tr>
                        ");
                WriteLiteral(@"    </thead>
                            <tbody data-bind=""foreach: Containers"">
                                <tr>
                                    <td class=""button-column""><button class=""btn btn-danger btn-sm"" data-bind=""click: $root.RemoveContainer"">&nbsp;<span class=""glyphicon glyphicon-remove""></span>&nbsp;</button></td>
                                    <td class=""text-column""><input type=""text"" class=""form-control input-sm"" data-bind=""value: Name"" /></td>
                                    <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Length"" /></td>
                                    <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Width"" /></td>
                                    <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Height"" /></td>
                                    <td class=""bu");
                WriteLiteral(@"tton-column gray-cell""></td>
                                    <td class=""algorithm-name-column"">
                                        <table>
                                            <tbody data-bind=""foreach: AlgorithmPackingResults"">
                                                <tr><td><p class=""form-control-static"" data-bind=""text: AlgorithmName""></p></td></tr>
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class=""data-column text-center"">
                                        <table style=""margin: auto;"">
                                            <tbody data-bind=""foreach: AlgorithmPackingResults"">
                                                <tr><td><p class=""form-control-static"" data-bind=""text: PackTimeInMilliseconds""></p></td></tr>
                                            </tbody>
                                        </table>
                ");
                WriteLiteral(@"                    </td>
                                    <td class=""data-column text-center"">
                                        <table style=""margin: auto;"">
                                            <tbody data-bind=""foreach: AlgorithmPackingResults"">
                                                <tr><td><p class=""form-control-static"" data-bind=""text: PercentContainerVolumePacked""></p></td></tr>
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class=""data-column"">
                                        <table style=""width: 100%"">
                                            <tbody data-bind=""foreach: AlgorithmPackingResults"">
                                                <tr class=""text-center""><td data-bind=""css: UnpackedItems.length == 0 && PackedItems.length != 0 ? 'bg-success' : ''""><p class=""form-control-static"" data-bind=""text: PackedItems.length""></p><");
                WriteLiteral(@"/td></tr>
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class=""data-column"">
                                        <table style=""width: 100%"">
                                            <tbody data-bind=""foreach: AlgorithmPackingResults"">
                                                <tr class=""text-center""><td data-bind=""css: UnpackedItems.length == 0 && PackedItems.length != 0 ? 'bg-success' : ''""><p class=""form-control-static"" data-bind=""text: UnpackedItems.length""></p></td></tr>
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class=""data-column text-right"">
                                        <table style=""margin-left: auto;"">
                                            <tbody data-bind=""foreach: AlgorithmPackingResults"">
     ");
                WriteLiteral(@"                                           <tr><td><button class=""btn btn-link"" data-toggle=""modal"" data-target="".render-modal"" data-bind=""click: $root.ShowPackingView.bind($parent)"">&nbsp;<span class=""glyphicon glyphicon-camera""></span>&nbsp;</button></td></tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class=""panel-footer"">
                        <table class=""table table-condensed borderless"" style=""font-size: 14px;"">
                            <tr>
                                <td class=""button-column""><button class=""btn btn-success btn-sm"" data-bind=""click: AddNewContainer"">&nbsp;<span class=""glyphicon glyphicon-plus""></span>&nbsp;</button></td>
                                <td class=""text-column""><input type=""text"" class=""form-control inpu");
                WriteLiteral(@"t-sm"" data-bind=""value: NewContainer.Name"" /></td>
                                <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewContainer.Length"" /></td>
                                <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewContainer.Width"" /></td>
                                <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewContainer.Height"" /></td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-xs-4"">
                <div class=""panel panel-default"">
                    <div class=""panel-heading"">
                        <h3 class=""panel-title"">Packing Algorithms</h3>
                    </");
                WriteLiteral(@"div>
                    <div class=""panel-body"">
                        <table class=""table table-condensed"" style=""font-size: 14px;"">
                            <thead>
                                <tr>
                                    <th class=""button-column""></th>
                                    <th class=""algorithm-name-column"">Algorithms to Use</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody data-bind=""foreach: AlgorithmsToUse"">
                                <tr>
                                    <td class=""button-column""><button class=""btn btn-danger btn-sm"" data-bind=""click: $root.RemoveAlgorithmToUse"">&nbsp;<span class=""glyphicon glyphicon-remove""></span>&nbsp;</button></td>
                                    <td class=""algorithm-name-column""><p class=""form-control-static"" data-bind=""text: AlgorithmName""></p></td>
                                    <td></td>
            ");
                WriteLiteral(@"                    </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class=""panel-footer"">
                        <table class=""table table-condensed borderless"" style=""font-size: 14px;"">
                            <tr>
                                <td class=""button-column""><button class=""btn btn-success btn-sm"" data-bind=""click: AddAlgorithmToUse"">&nbsp;<span class=""glyphicon glyphicon-plus""></span>&nbsp;</button></td>
                                <td class=""algorithm-name-column"">
                                    <select id=""algorithm-select"" class=""form-control"">
                                        <option value=""1"">EB-AFIT</option>
                                    </select>
                                </td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class=""");
                WriteLiteral(@"col-xs-8"">
                <div class=""panel panel-default"">
                    <div class=""panel-heading"">
                        <h3 class=""panel-title pull-left"">Items to Pack</h3>
                        <div class=""pull-right""><button class=""btn btn-default btn-sm"" data-bind=""click: GenerateItemsToPack"">Generate</button></div>
                        <div class=""clearfix""></div>
                    </div>
                    <div class=""panel-body"">
                        <table class=""table table-condensed"" style=""font-size: 14px;"">
                            <thead>
                                <tr>
                                    <th class=""button-column""></th>
                                    <th class=""text-column"">Name</th>
                                    <th class=""data-column text-center"">L</th>
                                    <th class=""data-column text-center"">W</th>
                                    <th class=""data-column text-center"">H</th>
                            ");
                WriteLiteral(@"        <th class=""data-column text-center"">Qty</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody data-bind=""foreach: ItemsToPack"">
                                <tr>
                                    <td class=""button-column""><button class=""btn btn-danger btn-sm"" data-bind=""click: $root.RemoveItemToPack"">&nbsp;<span class=""glyphicon glyphicon-remove""></span>&nbsp;</button></td>
                                    <td class=""text-column""><input type=""text"" class=""form-control input-sm"" data-bind=""value: Name"" /></td>
                                    <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Length"" /></td>
                                    <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Width"" /></td>
                                    <td class=""data-c");
                WriteLiteral(@"olumn text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Height"" /></td>
                                    <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: Quantity"" /></td>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class=""panel-footer"">
                        <table class=""table table-condensed borderless"" style=""font-size: 14px;"">
                            <tr>
                                <td class=""button-column""><button class=""btn btn-success btn-sm"" data-bind=""click: AddNewItemToPack"">&nbsp;<span class=""glyphicon glyphicon-plus""></span>&nbsp;</button></td>
                                <td class=""text-column""><input type=""text"" class=""form-control input-sm"" data-bind=""value: NewItemToPack.Name"" /></td>
                         ");
                WriteLiteral(@"       <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewItemToPack.Length"" /></td>
                                <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewItemToPack.Width"" /></td>
                                <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewItemToPack.Height"" /></td>
                                <td class=""data-column text-center""><input type=""text"" class=""form-control input-sm text-center"" data-bind=""value: NewItemToPack.Quantity"" /></td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class=""modal fade render-modal"" tabindex=""-1"" role=""dialog"">
        <div class=""modal-dialog modal-lg"" role=""document"">
    ");
                WriteLiteral(@"        <div class=""modal-content"" style=""margin-bottom: 30px;"">
                <div id=""drawing-container"" style=""margin-top: 30px; text-align: center;""></div>
                <div class=""text-center"">
                    <button class=""btn btn-default"" data-bind=""click: UnpackItemInRender, enable: AreItemsPacked()""><span class=""glyphicon glyphicon-chevron-left""></span></button>
                    <button class=""btn btn-default"" data-bind=""click: PackItemInRender, disable: AreAllItemsPacked()""><span class=""glyphicon glyphicon-chevron-right""></span></button>
                </div>
            </div>
        </div>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16178, 8, true);
            WriteLiteral("\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
